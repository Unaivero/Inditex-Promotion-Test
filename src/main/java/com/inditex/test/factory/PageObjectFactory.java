package com.inditex.test.factory;

import com.inditex.test.exceptions.PageObjectException;\nimport com.inditex.test.pages.HomePage;\nimport com.inditex.test.pages.ProductPage;\nimport com.inditex.test.pages.ShoppingCartPage;\nimport org.openqa.selenium.WebDriver;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.lang.reflect.Constructor;\nimport java.util.concurrent.ConcurrentHashMap;\n\npublic class PageObjectFactory {\n    private static final Logger logger = LoggerFactory.getLogger(PageObjectFactory.class);\n    private static final ConcurrentHashMap<String, Object> pageCache = new ConcurrentHashMap<>();\n    \n    private final WebDriver driver;\n    \n    public PageObjectFactory(WebDriver driver) {\n        this.driver = driver;\n    }\n    \n    public HomePage createHomePage() {\n        return createPage(HomePage.class);\n    }\n    \n    public ProductPage createProductPage() {\n        return createPage(ProductPage.class);\n    }\n    \n    public ShoppingCartPage createShoppingCartPage() {\n        return createPage(ShoppingCartPage.class);\n    }\n    \n    @SuppressWarnings(\"unchecked\")\n    public <T> T createPage(Class<T> pageClass) {\n        String cacheKey = pageClass.getSimpleName() + \"_\" + Thread.currentThread().getId();\n        \n        return (T) pageCache.computeIfAbsent(cacheKey, key -> {\n            try {\n                logger.debug(\"Creating new instance of {}\", pageClass.getSimpleName());\n                \n                // Try constructor with WebDriver parameter first\n                try {\n                    Constructor<T> constructor = pageClass.getConstructor(WebDriver.class);\n                    return constructor.newInstance(driver);\n                } catch (NoSuchMethodException e) {\n                    // Fall back to default constructor\n                    Constructor<T> constructor = pageClass.getConstructor();\n                    return constructor.newInstance();\n                }\n                \n            } catch (Exception e) {\n                logger.error(\"Failed to create instance of {}\", pageClass.getSimpleName(), e);\n                throw new PageObjectException(\"Failed to create page object: \" + pageClass.getSimpleName(), e);\n            }\n        });\n    }\n    \n    public static void clearCache() {\n        logger.debug(\"Clearing page object cache\");\n        pageCache.clear();\n    }\n    \n    public static void clearCacheForThread() {\n        long threadId = Thread.currentThread().getId();\n        pageCache.entrySet().removeIf(entry -> entry.getKey().endsWith(\"_\" + threadId));\n        logger.debug(\"Cleared page object cache for thread {}\", threadId);\n    }\n}